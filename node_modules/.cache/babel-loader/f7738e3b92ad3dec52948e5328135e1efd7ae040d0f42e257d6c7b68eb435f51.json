{"ast":null,"code":"\"use strict\";\n\nvar Shim = require(\"./shim\");\nvar Dict = require(\"./_dict\");\nvar List = require(\"./_list\");\nvar GenericCollection = require(\"./generic-collection\");\nvar GenericSet = require(\"./generic-set\");\nvar TreeLog = require(\"./tree-log\");\nvar object_has = Object.prototype.hasOwnProperty;\nmodule.exports = FastSet;\nfunction FastSet(values, equals, hash, getDefault) {\n  if (!(this instanceof FastSet)) {\n    return new FastSet(values, equals, hash, getDefault);\n  }\n  equals = equals || Object.equals;\n  hash = hash || Object.hash;\n  getDefault = getDefault || Function.noop;\n  this.contentEquals = equals;\n  this.contentHash = hash;\n  this.getDefault = getDefault;\n  var self = this;\n  this.buckets = new this.Buckets(null, function getDefaultBucket() {\n    return new self.Bucket();\n  });\n  this.length = 0;\n  this.addEach(values);\n}\nFastSet.FastSet = FastSet; // hack so require(\"fast-set\").FastSet will work in MontageJS\n\nObject.addEach(FastSet.prototype, GenericCollection.prototype);\nObject.addEach(FastSet.prototype, GenericSet.prototype);\nFastSet.from = GenericCollection.from;\nFastSet.prototype.Buckets = Dict;\nFastSet.prototype.Bucket = List;\nFastSet.prototype.constructClone = function (values) {\n  return new this.constructor(values, this.contentEquals, this.contentHash, this.getDefault);\n};\nFastSet.prototype.has = function (value) {\n  var hash = this.contentHash(value);\n  return this.buckets.get(hash).has(value);\n};\nFastSet.prototype.get = function (value, equals) {\n  if (equals) {\n    throw new Error(\"FastSet#get does not support second argument: equals\");\n  }\n  var hash = this.contentHash(value);\n  var buckets = this.buckets;\n  if (buckets.has(hash)) {\n    return buckets.get(hash).get(value);\n  } else {\n    return this.getDefault(value);\n  }\n};\nFastSet.prototype[\"delete\"] = function (value, equals) {\n  if (equals) {\n    throw new Error(\"FastSet#delete does not support second argument: equals\");\n  }\n  var hash = this.contentHash(value);\n  var buckets = this.buckets;\n  if (buckets.has(hash)) {\n    var bucket = buckets.get(hash);\n    if (bucket[\"delete\"](value)) {\n      this.length--;\n      if (bucket.length === 0) {\n        buckets[\"delete\"](hash);\n      }\n      return true;\n    }\n  }\n  return false;\n};\nFastSet.prototype.clear = function () {\n  this.buckets.clear();\n  this.length = 0;\n};\nFastSet.prototype.add = function (value) {\n  var hash = this.contentHash(value);\n  var buckets = this.buckets;\n  if (!buckets.has(hash)) {\n    buckets.set(hash, new this.Bucket(null, this.contentEquals));\n  }\n  if (!buckets.get(hash).has(value)) {\n    buckets.get(hash).add(value);\n    this.length++;\n    return true;\n  }\n  return false;\n};\nFastSet.prototype.reduce = function (callback, basis /*, thisp*/) {\n  var thisp = arguments[2];\n  var buckets = this.buckets;\n  var index = 0;\n  return buckets.reduce(function (basis, bucket) {\n    return bucket.reduce(function (basis, value) {\n      return callback.call(thisp, basis, value, index++, this);\n    }, basis, this);\n  }, basis, this);\n};\nFastSet.prototype.one = function () {\n  if (this.length > 0) {\n    return this.buckets.one().one();\n  }\n};\nFastSet.prototype.iterate = function () {\n  return this.buckets.valuesArray().flatten().iterate();\n};\nFastSet.prototype.log = function (charmap, logNode, callback, thisp) {\n  charmap = charmap || TreeLog.unicodeSharp;\n  logNode = logNode || this.logNode;\n  if (!callback) {\n    callback = console.log;\n    thisp = console;\n  }\n  callback = callback.bind(thisp);\n  var buckets = this.buckets,\n    bucketsSize = buckets.size,\n    mapIter = buckets.keys(),\n    hash,\n    index = 0,\n    branch,\n    leader,\n    bucket;\n  while (hash = mapIter.next().value) {\n    if (index === bucketsSize - 1) {\n      branch = charmap.fromAbove;\n      leader = ' ';\n    } else if (index === 0) {\n      branch = charmap.branchDown;\n      leader = charmap.strafe;\n    } else {\n      branch = charmap.fromBoth;\n      leader = charmap.strafe;\n    }\n    bucket = buckets.get(hash);\n    callback.call(thisp, branch + charmap.through + charmap.branchDown + ' ' + hash);\n    bucket.forEach(function (value, node) {\n      var branch, below, written;\n      if (node === bucket.head.prev) {\n        branch = charmap.fromAbove;\n        below = ' ';\n      } else {\n        branch = charmap.fromBoth;\n        below = charmap.strafe;\n      }\n      logNode(node, function (line) {\n        if (!written) {\n          callback.call(thisp, leader + ' ' + branch + charmap.through + charmap.through + line);\n          written = true;\n        } else {\n          callback.call(thisp, leader + ' ' + below + '  ' + line);\n        }\n      }, function (line) {\n        callback.call(thisp, leader + ' ' + charmap.strafe + '  ' + line);\n      });\n    });\n    index++;\n  }\n\n  //var hashes = buckets.keysArray();\n  // hashes.forEach(function (hash, index) {\n  //     var branch;\n  //     var leader;\n  //     if (index === hashes.length - 1) {\n  //         branch = charmap.fromAbove;\n  //         leader = ' ';\n  //     } else if (index === 0) {\n  //         branch = charmap.branchDown;\n  //         leader = charmap.strafe;\n  //     } else {\n  //         branch = charmap.fromBoth;\n  //         leader = charmap.strafe;\n  //     }\n  //     var bucket = buckets.get(hash);\n  //     callback.call(thisp, branch + charmap.through + charmap.branchDown + ' ' + hash);\n  //     bucket.forEach(function (value, node) {\n  //         var branch, below;\n  //         if (node === bucket.head.prev) {\n  //             branch = charmap.fromAbove;\n  //             below = ' ';\n  //         } else {\n  //             branch = charmap.fromBoth;\n  //             below = charmap.strafe;\n  //         }\n  //         var written;\n  //         logNode(\n  //             node,\n  //             function (line) {\n  //                 if (!written) {\n  //                     callback.call(thisp, leader + ' ' + branch + charmap.through + charmap.through + line);\n  //                     written = true;\n  //                 } else {\n  //                     callback.call(thisp, leader + ' ' + below + '  ' + line);\n  //                 }\n  //             },\n  //             function (line) {\n  //                 callback.call(thisp, leader + ' ' + charmap.strafe + '  ' + line);\n  //             }\n  //         );\n  //     });\n  // });\n};\n\nFastSet.prototype.logNode = function (node, write) {\n  var value = node.value;\n  if (Object(value) === value) {\n    JSON.stringify(value, null, 4).split(\"\\n\").forEach(function (line) {\n      write(\" \" + line);\n    });\n  } else {\n    write(\" \" + value);\n  }\n};","map":{"version":3,"names":["Shim","require","Dict","List","GenericCollection","GenericSet","TreeLog","object_has","Object","prototype","hasOwnProperty","module","exports","FastSet","values","equals","hash","getDefault","Function","noop","contentEquals","contentHash","self","buckets","Buckets","getDefaultBucket","Bucket","length","addEach","from","constructClone","constructor","has","value","get","Error","bucket","clear","add","set","reduce","callback","basis","thisp","arguments","index","call","one","iterate","valuesArray","flatten","log","charmap","logNode","unicodeSharp","console","bind","bucketsSize","size","mapIter","keys","branch","leader","next","fromAbove","branchDown","strafe","fromBoth","through","forEach","node","below","written","head","prev","line","write","JSON","stringify","split"],"sources":["D:/Gits/bomes/node_modules/collections/_fast-set.js"],"sourcesContent":["\"use strict\";\n\nvar Shim = require(\"./shim\");\nvar Dict = require(\"./_dict\");\nvar List = require(\"./_list\");\nvar GenericCollection = require(\"./generic-collection\");\nvar GenericSet = require(\"./generic-set\");\nvar TreeLog = require(\"./tree-log\");\n\nvar object_has = Object.prototype.hasOwnProperty;\n\nmodule.exports = FastSet;\n\nfunction FastSet(values, equals, hash, getDefault) {\n    if (!(this instanceof FastSet)) {\n        return new FastSet(values, equals, hash, getDefault);\n    }\n    equals = equals || Object.equals;\n    hash = hash || Object.hash;\n    getDefault = getDefault || Function.noop;\n    this.contentEquals = equals;\n    this.contentHash = hash;\n    this.getDefault = getDefault;\n    var self = this;\n    this.buckets = new this.Buckets(null, function getDefaultBucket() {\n        return new self.Bucket();\n    });\n    this.length = 0;\n    this.addEach(values);\n}\n\nFastSet.FastSet = FastSet; // hack so require(\"fast-set\").FastSet will work in MontageJS\n\nObject.addEach(FastSet.prototype, GenericCollection.prototype);\nObject.addEach(FastSet.prototype, GenericSet.prototype);\nFastSet.from = GenericCollection.from;\n\nFastSet.prototype.Buckets = Dict;\nFastSet.prototype.Bucket = List;\n\nFastSet.prototype.constructClone = function (values) {\n    return new this.constructor(\n        values,\n        this.contentEquals,\n        this.contentHash,\n        this.getDefault\n    );\n};\n\nFastSet.prototype.has = function (value) {\n    var hash = this.contentHash(value);\n    return this.buckets.get(hash).has(value);\n};\n\nFastSet.prototype.get = function (value, equals) {\n    if (equals) {\n        throw new Error(\"FastSet#get does not support second argument: equals\");\n    }\n    var hash = this.contentHash(value);\n    var buckets = this.buckets;\n    if (buckets.has(hash)) {\n        return buckets.get(hash).get(value);\n    } else {\n        return this.getDefault(value);\n    }\n};\n\nFastSet.prototype[\"delete\"] = function (value, equals) {\n    if (equals) {\n        throw new Error(\"FastSet#delete does not support second argument: equals\");\n    }\n    var hash = this.contentHash(value);\n    var buckets = this.buckets;\n    if (buckets.has(hash)) {\n        var bucket = buckets.get(hash);\n        if (bucket[\"delete\"](value)) {\n            this.length--;\n            if (bucket.length === 0) {\n                buckets[\"delete\"](hash);\n            }\n            return true;\n        }\n    }\n    return false;\n};\n\nFastSet.prototype.clear = function () {\n    this.buckets.clear();\n    this.length = 0;\n};\n\nFastSet.prototype.add = function (value) {\n    var hash = this.contentHash(value);\n    var buckets = this.buckets;\n    if (!buckets.has(hash)) {\n        buckets.set(hash, new this.Bucket(null, this.contentEquals));\n    }\n    if (!buckets.get(hash).has(value)) {\n        buckets.get(hash).add(value);\n        this.length++;\n        return true;\n    }\n    return false;\n};\n\nFastSet.prototype.reduce = function (callback, basis /*, thisp*/) {\n    var thisp = arguments[2];\n    var buckets = this.buckets;\n    var index = 0;\n    return buckets.reduce(function (basis, bucket) {\n        return bucket.reduce(function (basis, value) {\n            return callback.call(thisp, basis, value, index++, this);\n        }, basis, this);\n    }, basis, this);\n};\n\nFastSet.prototype.one = function () {\n    if (this.length > 0) {\n        return this.buckets.one().one();\n    }\n};\n\nFastSet.prototype.iterate = function () {\n    return this.buckets.valuesArray().flatten().iterate();\n};\n\nFastSet.prototype.log = function (charmap, logNode, callback, thisp) {\n    charmap = charmap || TreeLog.unicodeSharp;\n    logNode = logNode || this.logNode;\n    if (!callback) {\n        callback = console.log;\n        thisp = console;\n    }\n    callback = callback.bind(thisp);\n\n    var buckets = this.buckets, bucketsSize = buckets.size,\n        mapIter = buckets.keys(), hash, index = 0,\n        branch, leader, bucket;\n\n    while (hash = mapIter.next().value) {\n        if (index === bucketsSize - 1) {\n            branch = charmap.fromAbove;\n            leader = ' ';\n        } else if (index === 0) {\n            branch = charmap.branchDown;\n            leader = charmap.strafe;\n        } else {\n            branch = charmap.fromBoth;\n            leader = charmap.strafe;\n        }\n        bucket = buckets.get(hash);\n        callback.call(thisp, branch + charmap.through + charmap.branchDown + ' ' + hash);\n        bucket.forEach(function (value, node) {\n            var branch, below, written;\n            if (node === bucket.head.prev) {\n                branch = charmap.fromAbove;\n                below = ' ';\n            } else {\n                branch = charmap.fromBoth;\n                below = charmap.strafe;\n            }\n            logNode(\n                node,\n                function (line) {\n                    if (!written) {\n                        callback.call(thisp, leader + ' ' + branch + charmap.through + charmap.through + line);\n                        written = true;\n                    } else {\n                        callback.call(thisp, leader + ' ' + below + '  ' + line);\n                    }\n                },\n                function (line) {\n                    callback.call(thisp, leader + ' ' + charmap.strafe + '  ' + line);\n                }\n            );\n        });\n        index++;\n    }\n\n    //var hashes = buckets.keysArray();\n    // hashes.forEach(function (hash, index) {\n    //     var branch;\n    //     var leader;\n    //     if (index === hashes.length - 1) {\n    //         branch = charmap.fromAbove;\n    //         leader = ' ';\n    //     } else if (index === 0) {\n    //         branch = charmap.branchDown;\n    //         leader = charmap.strafe;\n    //     } else {\n    //         branch = charmap.fromBoth;\n    //         leader = charmap.strafe;\n    //     }\n    //     var bucket = buckets.get(hash);\n    //     callback.call(thisp, branch + charmap.through + charmap.branchDown + ' ' + hash);\n    //     bucket.forEach(function (value, node) {\n    //         var branch, below;\n    //         if (node === bucket.head.prev) {\n    //             branch = charmap.fromAbove;\n    //             below = ' ';\n    //         } else {\n    //             branch = charmap.fromBoth;\n    //             below = charmap.strafe;\n    //         }\n    //         var written;\n    //         logNode(\n    //             node,\n    //             function (line) {\n    //                 if (!written) {\n    //                     callback.call(thisp, leader + ' ' + branch + charmap.through + charmap.through + line);\n    //                     written = true;\n    //                 } else {\n    //                     callback.call(thisp, leader + ' ' + below + '  ' + line);\n    //                 }\n    //             },\n    //             function (line) {\n    //                 callback.call(thisp, leader + ' ' + charmap.strafe + '  ' + line);\n    //             }\n    //         );\n    //     });\n    // });\n};\n\nFastSet.prototype.logNode = function (node, write) {\n    var value = node.value;\n    if (Object(value) === value) {\n        JSON.stringify(value, null, 4).split(\"\\n\").forEach(function (line) {\n            write(\" \" + line);\n        });\n    } else {\n        write(\" \" + value);\n    }\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}