{"ast":null,"code":"\"use strict\";\n\nmodule.exports = List;\nvar Shim = require(\"./shim\");\nvar GenericCollection = require(\"./generic-collection\");\nvar GenericOrder = require(\"./generic-order\");\nfunction List(values, equals, getDefault) {\n  return List._init(List, this, values, equals, getDefault);\n}\nList._init = function (constructor, object, values, equals, getDefault) {\n  if (!(object instanceof constructor)) {\n    return new constructor(values, equals, getDefault);\n  }\n  var head = object.head = new object.Node();\n  head.next = head;\n  head.prev = head;\n  object.contentEquals = equals || Object.equals;\n  object.getDefault = getDefault || Function.noop;\n  object.length = 0;\n  object.addEach(values);\n};\nList.List = List; // hack so require(\"list\").List will work in MontageJS\n\nObject.addEach(List.prototype, GenericCollection.prototype);\nObject.addEach(List.prototype, GenericOrder.prototype);\nList.from = GenericCollection.from;\nList.prototype.constructClone = function (values) {\n  return new this.constructor(values, this.contentEquals, this.getDefault);\n};\nList.prototype.find = function (value, equals, index) {\n  equals = equals || this.contentEquals;\n  var head = this.head;\n  var at = this.scan(index, head.next);\n  while (at !== head) {\n    if (equals(at.value, value)) {\n      return at;\n    }\n    at = at.next;\n  }\n};\nList.prototype.findLast = function (value, equals, index) {\n  equals = equals || this.contentEquals;\n  var head = this.head;\n  var at = this.scan(index, head.prev);\n  while (at !== head) {\n    if (equals(at.value, value)) {\n      return at;\n    }\n    at = at.prev;\n  }\n};\nList.prototype.has = function (value, equals) {\n  return !!this.find(value, equals);\n};\nList.prototype.get = function (value, equals) {\n  var found = this.find(value, equals);\n  if (found) {\n    return found.value;\n  }\n  return this.getDefault(value);\n};\n\n// LIFO (delete removes the most recently added equivalent value)\nList.prototype[\"delete\"] = function (value, equals) {\n  var found = this.findLast(value, equals);\n  if (found) {\n    found[\"delete\"]();\n    this.length--;\n    return true;\n  }\n  return false;\n};\nList.prototype.deleteAll = function (value, equals) {\n  equals = equals || this.contentEquals;\n  var head = this.head;\n  var at = head.next;\n  var count = 0;\n  while (at !== head) {\n    if (equals(value, at.value)) {\n      at[\"delete\"]();\n      count++;\n    }\n    at = at.next;\n  }\n  this.length -= count;\n  return count;\n};\nList.prototype.clear = function () {\n  this.head.next = this.head.prev = this.head;\n  this.length = 0;\n};\nList.prototype.add = function (value) {\n  var node = new this.Node(value);\n  return this._addNode(node);\n};\nList.prototype._addNode = function (node) {\n  this.head.addBefore(node);\n  this.length++;\n  return true;\n};\nList.prototype.push = function () {\n  var head = this.head;\n  for (var i = 0; i < arguments.length; i++) {\n    var value = arguments[i];\n    var node = new this.Node(value);\n    head.addBefore(node);\n  }\n  this.length += arguments.length;\n};\nList.prototype.unshift = function () {\n  var at = this.head;\n  for (var i = 0; i < arguments.length; i++) {\n    var value = arguments[i];\n    var node = new this.Node(value);\n    at.addAfter(node);\n    at = node;\n  }\n  this.length += arguments.length;\n};\nList.prototype._shouldPop = function () {\n  var value;\n  var head = this.head;\n  if (head.prev !== head) {\n    value = head.prev.value;\n  }\n  return value;\n};\nList.prototype.pop = function (_before, _after) {\n  var value;\n  var head = this.head;\n  if (head.prev !== head) {\n    value = head.prev.value;\n    var index = this.length - 1;\n    var popDispatchValueArray = _before ? _before.call(this, value, index) : void 0;\n    head.prev['delete']();\n    this.length--;\n    _after ? _after.call(this, value, index, popDispatchValueArray) : void 0;\n  }\n  return value;\n};\nList.prototype.shift = function (_before, _after) {\n  var value;\n  var head = this.head;\n  if (head.prev !== head) {\n    value = head.next.value;\n    var dispatchValueArray = _before ? _before.call(this, value, 0) : void 0;\n    head.next['delete']();\n    this.length--;\n    _after ? _after.call(this, value, 0, dispatchValueArray) : void 0;\n  }\n  return value;\n};\nList.prototype.peek = function () {\n  if (this.head !== this.head.next) {\n    return this.head.next.value;\n  }\n};\nList.prototype.poke = function (value) {\n  if (this.head !== this.head.next) {\n    this.head.next.value = value;\n  } else {\n    this.push(value);\n  }\n};\nList.prototype.one = function () {\n  return this.peek();\n};\n\n// TODO\n// List.prototype.indexOf = function (value) {\n// };\n\n// TODO\n// List.prototype.lastIndexOf = function (value) {\n// };\n\n// an internal utility for coercing index offsets to nodes\nList.prototype.scan = function (at, fallback) {\n  var head = this.head;\n  if (typeof at === \"number\") {\n    var count = at;\n    if (count >= 0) {\n      at = head.next;\n      while (count) {\n        count--;\n        at = at.next;\n        if (at == head) {\n          break;\n        }\n      }\n    } else {\n      at = head;\n      while (count < 0) {\n        count++;\n        at = at.prev;\n        if (at == head) {\n          break;\n        }\n      }\n    }\n    return at;\n  } else {\n    return at || fallback;\n  }\n};\n\n// at and end may both be positive or negative numbers (in which cases they\n// correspond to numeric indicies, or nodes)\nList.prototype.slice = function (at, end) {\n  var sliced = [];\n  var head = this.head;\n  at = this.scan(at, head.next);\n  end = this.scan(end, head);\n  while (at !== end && at !== head) {\n    sliced.push(at.value);\n    at = at.next;\n  }\n  return sliced;\n};\nList.prototype.splice = function (at, length /*...plus*/) {\n  return this.swap(at, length, Array.prototype.slice.call(arguments, 2));\n};\nList.prototype.swap = function (start, length, plus, _before, _after) {\n  var initial = start;\n  // start will be head if start is null or -1 (meaning from the end), but\n  // will be head.next if start is 0 (meaning from the beginning)\n  start = this.scan(start, this.head);\n  if (length == null) {\n    length = Infinity;\n  }\n  plus = Array.from(plus);\n\n  // collect the minus array\n  var minus = [];\n  var at = start;\n  while (length-- && length >= 0 && at !== this.head) {\n    minus.push(at.value);\n    at = at.next;\n  }\n\n  // before range change\n  var index, startNode;\n  index = _before ? _before.call(this, start, plus, minus) : void 0;\n\n  // delete minus\n  var at = start;\n  for (var i = 0, at = start; i < minus.length; i++, at = at.next) {\n    at[\"delete\"]();\n  }\n  // add plus\n  if (initial == null && at === this.head) {\n    at = this.head.next;\n  }\n  for (var i = 0; i < plus.length; i++) {\n    var node = new this.Node(plus[i]);\n    at.addBefore(node);\n  }\n  // adjust length\n  this.length += plus.length - minus.length;\n  _after ? _after.call(this, start, plus, minus) : void 0;\n  return minus;\n};\nList.prototype.reverse = function () {\n  var at = this.head;\n  do {\n    var temp = at.next;\n    at.next = at.prev;\n    at.prev = temp;\n    at = at.next;\n  } while (at !== this.head);\n  return this;\n};\nList.prototype.sort = function () {\n  this.swap(0, this.length, this.sorted.apply(this, arguments));\n};\n\n// TODO account for missing basis argument\nList.prototype.reduce = function (callback, basis /*, thisp*/) {\n  var thisp = arguments[2];\n  var head = this.head;\n  var at = head.next;\n  while (at !== head) {\n    basis = callback.call(thisp, basis, at.value, at, this);\n    at = at.next;\n  }\n  return basis;\n};\nList.prototype.reduceRight = function (callback, basis /*, thisp*/) {\n  var thisp = arguments[2];\n  var head = this.head;\n  var at = head.prev;\n  while (at !== head) {\n    basis = callback.call(thisp, basis, at.value, at, this);\n    at = at.prev;\n  }\n  return basis;\n};\nList.prototype.updateIndexes = function (node, index) {\n  while (node !== this.head) {\n    node.index = index++;\n    node = node.next;\n  }\n};\nList.prototype.iterate = function () {\n  return new ListIterator(this.head);\n};\nfunction ListIterator(head) {\n  this.head = head;\n  this.at = head.next;\n}\n;\nListIterator.prototype.__iterationObject = null;\nObject.defineProperty(ListIterator.prototype, \"_iterationObject\", {\n  get: function () {\n    return this.__iterationObject || (this.__iterationObject = {\n      done: false,\n      value: null\n    });\n  }\n});\nListIterator.prototype.next = function () {\n  if (this.at === this.head) {\n    this._iterationObject.done = true;\n    this._iterationObject.value = void 0;\n  } else {\n    var value = this.at.value;\n    this.at = this.at.next;\n    this._iterationObject.value = value;\n  }\n  return this._iterationObject;\n};\nList.prototype.Node = Node;\nfunction Node(value) {\n  this.value = value;\n  this.prev = null;\n  this.next = null;\n}\n;\nNode.prototype[\"delete\"] = function () {\n  this.prev.next = this.next;\n  this.next.prev = this.prev;\n};\nNode.prototype.addBefore = function (node) {\n  var prev = this.prev;\n  this.prev = node;\n  node.prev = prev;\n  prev.next = node;\n  node.next = this;\n};\nNode.prototype.addAfter = function (node) {\n  var next = this.next;\n  this.next = node;\n  node.next = next;\n  next.prev = node;\n  node.prev = this;\n};","map":{"version":3,"names":["module","exports","List","Shim","require","GenericCollection","GenericOrder","values","equals","getDefault","_init","constructor","object","head","Node","next","prev","contentEquals","Object","Function","noop","length","addEach","prototype","from","constructClone","find","value","index","at","scan","findLast","has","get","found","deleteAll","count","clear","add","node","_addNode","addBefore","push","i","arguments","unshift","addAfter","_shouldPop","pop","_before","_after","popDispatchValueArray","call","shift","dispatchValueArray","peek","poke","one","fallback","slice","end","sliced","splice","swap","Array","start","plus","initial","Infinity","minus","startNode","reverse","temp","sort","sorted","apply","reduce","callback","basis","thisp","reduceRight","updateIndexes","iterate","ListIterator","__iterationObject","defineProperty","done","_iterationObject"],"sources":["D:/Gits/bomes/node_modules/collections/_list.js"],"sourcesContent":["\"use strict\";\n\nmodule.exports = List;\n\nvar Shim = require(\"./shim\");\nvar GenericCollection = require(\"./generic-collection\");\nvar GenericOrder = require(\"./generic-order\");\n\nfunction List(values, equals, getDefault) {\n    return List._init(List, this, values, equals, getDefault);\n}\n\nList._init = function (constructor, object, values, equals, getDefault) {\n    if (!(object instanceof constructor)) {\n        return new constructor(values, equals, getDefault);\n    }\n    var head = object.head = new object.Node();\n    head.next = head;\n    head.prev = head;\n    object.contentEquals = equals || Object.equals;\n    object.getDefault = getDefault || Function.noop;\n    object.length = 0;\n    object.addEach(values);\n}\n\nList.List = List; // hack so require(\"list\").List will work in MontageJS\n\nObject.addEach(List.prototype, GenericCollection.prototype);\nObject.addEach(List.prototype, GenericOrder.prototype);\n\nList.from = GenericCollection.from;\n\nList.prototype.constructClone = function (values) {\n    return new this.constructor(values, this.contentEquals, this.getDefault);\n};\n\nList.prototype.find = function (value, equals, index) {\n    equals = equals || this.contentEquals;\n    var head = this.head;\n    var at = this.scan(index, head.next);\n    while (at !== head) {\n        if (equals(at.value, value)) {\n            return at;\n        }\n        at = at.next;\n    }\n};\n\nList.prototype.findLast = function (value, equals, index) {\n    equals = equals || this.contentEquals;\n    var head = this.head;\n    var at = this.scan(index, head.prev);\n    while (at !== head) {\n        if (equals(at.value, value)) {\n            return at;\n        }\n        at = at.prev;\n    }\n};\n\nList.prototype.has = function (value, equals) {\n    return !!this.find(value, equals);\n};\n\nList.prototype.get = function (value, equals) {\n    var found = this.find(value, equals);\n    if (found) {\n        return found.value;\n    }\n    return this.getDefault(value);\n};\n\n// LIFO (delete removes the most recently added equivalent value)\nList.prototype[\"delete\"] = function (value, equals) {\n    var found = this.findLast(value, equals);\n    if (found) {\n        found[\"delete\"]();\n        this.length--;\n        return true;\n    }\n    return false;\n};\n\nList.prototype.deleteAll = function (value, equals) {\n    equals = equals || this.contentEquals;\n    var head = this.head;\n    var at = head.next;\n    var count = 0;\n    while (at !== head) {\n        if (equals(value, at.value)) {\n            at[\"delete\"]();\n            count++;\n        }\n        at = at.next;\n    }\n    this.length -= count;\n    return count;\n};\n\nList.prototype.clear = function () {\n    this.head.next = this.head.prev = this.head;\n    this.length = 0;\n};\n\nList.prototype.add = function (value) {\n    var node = new this.Node(value)\n    return this._addNode(node);\n};\n\nList.prototype._addNode = function (node) {\n    this.head.addBefore(node);\n    this.length++;\n    return true;\n};\n\nList.prototype.push = function () {\n    var head = this.head;\n    for (var i = 0; i < arguments.length; i++) {\n        var value = arguments[i];\n        var node = new this.Node(value);\n        head.addBefore(node);\n    }\n    this.length += arguments.length;\n};\n\nList.prototype.unshift = function () {\n    var at = this.head;\n    for (var i = 0; i < arguments.length; i++) {\n        var value = arguments[i];\n        var node = new this.Node(value);\n        at.addAfter(node);\n        at = node;\n    }\n    this.length += arguments.length;\n};\n\nList.prototype._shouldPop = function () {\n    var value;\n    var head = this.head;\n    if (head.prev !== head) {\n        value = head.prev.value;\n    }\n    return value;\n}\n\nList.prototype.pop = function (_before, _after) {\n    var value;\n    var head = this.head;\n    if (head.prev !== head) {\n        value = head.prev.value;\n        var index = this.length - 1;\n        var popDispatchValueArray = _before ? _before.call(this,value,index) : void 0;\n        head.prev['delete']();\n        this.length--;\n        _after ? _after.call(this,value,index, popDispatchValueArray) : void 0;\n    }\n    return value;\n};\n\nList.prototype.shift = function (_before, _after) {\n    var value;\n    var head = this.head;\n    if (head.prev !== head) {\n        value = head.next.value;\n        var dispatchValueArray = _before ? _before.call(this,value,0) : void 0;\n        head.next['delete']();\n        this.length--;\n        _after ? _after.call(this,value,0,dispatchValueArray) : void 0;\n    }\n    return value;\n};\n\nList.prototype.peek = function () {\n    if (this.head !== this.head.next) {\n        return this.head.next.value;\n    }\n};\n\nList.prototype.poke = function (value) {\n    if (this.head !== this.head.next) {\n        this.head.next.value = value;\n    } else {\n        this.push(value);\n    }\n};\n\nList.prototype.one = function () {\n    return this.peek();\n};\n\n// TODO\n// List.prototype.indexOf = function (value) {\n// };\n\n// TODO\n// List.prototype.lastIndexOf = function (value) {\n// };\n\n// an internal utility for coercing index offsets to nodes\nList.prototype.scan = function (at, fallback) {\n    var head = this.head;\n    if (typeof at === \"number\") {\n        var count = at;\n        if (count >= 0) {\n            at = head.next;\n            while (count) {\n                count--;\n                at = at.next;\n                if (at == head) {\n                    break;\n                }\n            }\n        } else {\n            at = head;\n            while (count < 0) {\n                count++;\n                at = at.prev;\n                if (at == head) {\n                    break;\n                }\n            }\n        }\n        return at;\n    } else {\n        return at || fallback;\n    }\n};\n\n// at and end may both be positive or negative numbers (in which cases they\n// correspond to numeric indicies, or nodes)\nList.prototype.slice = function (at, end) {\n    var sliced = [];\n    var head = this.head;\n    at = this.scan(at, head.next);\n    end = this.scan(end, head);\n\n    while (at !== end && at !== head) {\n        sliced.push(at.value);\n        at = at.next;\n    }\n\n    return sliced;\n};\n\nList.prototype.splice = function (at, length /*...plus*/) {\n    return this.swap(at, length, Array.prototype.slice.call(arguments, 2));\n};\n\nList.prototype.swap = function (start, length, plus, _before, _after) {\n    var initial = start;\n    // start will be head if start is null or -1 (meaning from the end), but\n    // will be head.next if start is 0 (meaning from the beginning)\n    start = this.scan(start, this.head);\n    if (length == null) {\n        length = Infinity;\n    }\n    plus = Array.from(plus);\n\n    // collect the minus array\n    var minus = [];\n    var at = start;\n    while (length-- && length >= 0 && at !== this.head) {\n        minus.push(at.value);\n        at = at.next;\n    }\n\n    // before range change\n    var index, startNode;\n    index = _before ? _before.call(this, start, plus, minus) : void 0;\n\n    // delete minus\n    var at = start;\n    for (var i = 0, at = start; i < minus.length; i++, at = at.next) {\n        at[\"delete\"]();\n    }\n    // add plus\n    if (initial == null && at === this.head) {\n        at = this.head.next;\n    }\n    for (var i = 0; i < plus.length; i++) {\n        var node = new this.Node(plus[i]);\n        at.addBefore(node);\n    }\n    // adjust length\n    this.length += plus.length - minus.length;\n\n    _after ? _after.call(this, start, plus, minus) : void 0;\n\n    return minus;\n};\n\nList.prototype.reverse = function () {\n    var at = this.head;\n    do {\n        var temp = at.next;\n        at.next = at.prev;\n        at.prev = temp;\n        at = at.next;\n    } while (at !== this.head);\n    return this;\n};\n\nList.prototype.sort = function () {\n    this.swap(0, this.length, this.sorted.apply(this, arguments));\n};\n\n// TODO account for missing basis argument\nList.prototype.reduce = function (callback, basis /*, thisp*/) {\n    var thisp = arguments[2];\n    var head = this.head;\n    var at = head.next;\n    while (at !== head) {\n        basis = callback.call(thisp, basis, at.value, at, this);\n        at = at.next;\n    }\n    return basis;\n};\n\nList.prototype.reduceRight = function (callback, basis /*, thisp*/) {\n    var thisp = arguments[2];\n    var head = this.head;\n    var at = head.prev;\n    while (at !== head) {\n        basis = callback.call(thisp, basis, at.value, at, this);\n        at = at.prev;\n    }\n    return basis;\n};\n\nList.prototype.updateIndexes = function (node, index) {\n    while (node !== this.head) {\n        node.index = index++;\n        node = node.next;\n    }\n};\n\n\nList.prototype.iterate = function () {\n    return new ListIterator(this.head);\n};\n\nfunction ListIterator(head) {\n    this.head = head;\n    this.at = head.next;\n};\n\nListIterator.prototype.__iterationObject = null;\nObject.defineProperty(ListIterator.prototype,\"_iterationObject\", {\n    get: function() {\n        return this.__iterationObject || (this.__iterationObject = { done: false, value:null});\n    }\n});\n\n\nListIterator.prototype.next = function () {\n    if (this.at === this.head) {\n        this._iterationObject.done = true;\n        this._iterationObject.value = void 0;\n    } else {\n        var value = this.at.value;\n        this.at = this.at.next;\n        this._iterationObject.value = value;\n    }\n    return this._iterationObject;\n};\n\nList.prototype.Node = Node;\n\nfunction Node(value) {\n    this.value = value;\n    this.prev = null;\n    this.next = null;\n};\n\nNode.prototype[\"delete\"] = function () {\n    this.prev.next = this.next;\n    this.next.prev = this.prev;\n};\n\nNode.prototype.addBefore = function (node) {\n    var prev = this.prev;\n    this.prev = node;\n    node.prev = prev;\n    prev.next = node;\n    node.next = this;\n};\n\nNode.prototype.addAfter = function (node) {\n    var next = this.next;\n    this.next = node;\n    node.next = next;\n    next.prev = node;\n    node.prev = this;\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}