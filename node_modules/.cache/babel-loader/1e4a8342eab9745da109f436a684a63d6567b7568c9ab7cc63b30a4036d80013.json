{"ast":null,"code":"/*\n    Copyright (c) 2016, Montage Studio Inc. All Rights Reserved.\n    3-Clause BSD License\n    https://github.com/montagejs/montage/blob/master/LICENSE.md\n*/\n\nvar Map = require(\"../_map\");\nvar ObjectChangeDescriptor = module.exports.ObjectChangeDescriptor = function ObjectChangeDescriptor(name) {\n  this.name = name;\n  this.isActive = false;\n  this._willChangeListeners = null;\n  this._changeListeners = null;\n  return this;\n};\nObject.defineProperties(ObjectChangeDescriptor.prototype, {\n  name: {\n    value: null,\n    writable: true\n  },\n  isActive: {\n    value: false,\n    writable: true\n  },\n  _willChangeListeners: {\n    value: null,\n    writable: true\n  },\n  willChangeListeners: {\n    get: function () {\n      return this._willChangeListeners || (this._willChangeListeners = new this.willChangeListenersRecordConstructor(this.name));\n    }\n  },\n  _changeListeners: {\n    value: null,\n    writable: true\n  },\n  changeListeners: {\n    get: function () {\n      return this._changeListeners || (this._changeListeners = new this.changeListenersRecordConstructor(this.name));\n    }\n  },\n  changeListenersRecordConstructor: {\n    value: ChangeListenersRecord,\n    writable: true\n  },\n  willChangeListenersRecordConstructor: {\n    value: WillChangeListenersRecord,\n    writable: true\n  }\n});\nvar ListenerGhost = module.exports.ListenerGhost = Object.create(null);\nvar ChangeListenerSpecificHandlerMethodName = new Map();\nmodule.exports.ChangeListenersRecord = ChangeListenersRecord;\nfunction ChangeListenersRecord(name) {\n  var specificHandlerMethodName = ChangeListenerSpecificHandlerMethodName.get(name);\n  if (!specificHandlerMethodName) {\n    specificHandlerMethodName = \"handle\";\n    specificHandlerMethodName += name;\n    specificHandlerMethodName += \"Change\";\n    ChangeListenerSpecificHandlerMethodName.set(name, specificHandlerMethodName);\n  }\n  this._current = null;\n  this._current = null;\n  this.specificHandlerMethodName = specificHandlerMethodName;\n  return this;\n}\nObject.defineProperties(ChangeListenersRecord.prototype, {\n  _current: {\n    value: null,\n    writable: true\n  },\n  current: {\n    get: function () {\n      // if(this._current) {\n      //     console.log(this.constructor.name,\" with \",this._current.length,\" listeners: \", this._current);\n      // }\n      return this._current;\n      //return this._current || (this._current = []);\n    },\n\n    set: function (value) {\n      this._current = value;\n    }\n  },\n  ListenerGhost: {\n    value: ListenerGhost,\n    writable: true\n  },\n  ghostCount: {\n    value: 0,\n    writable: true\n  },\n  maxListenerGhostRatio: {\n    value: 0.3,\n    writable: true\n  },\n  listenerGhostFilter: {\n    value: function listenerGhostFilter(value) {\n      return value !== this.ListenerGhost;\n    }\n  },\n  removeCurrentGostListenersIfNeeded: {\n    value: function () {\n      if (this._current && this.ghostCount / this._current.length > this.maxListenerGhostRatio) {\n        this.ghostCount = 0;\n        this._current = this._current.filter(this.listenerGhostFilter, this);\n      }\n      return this._current;\n    }\n  },\n  dispatchBeforeChange: {\n    value: false,\n    writable: true\n  },\n  genericHandlerMethodName: {\n    value: \"handlePropertyChange\",\n    writable: true\n  }\n});\nmodule.exports.WillChangeListenersRecord = WillChangeListenersRecord;\nvar WillChangeListenerSpecificHandlerMethodName = new Map();\nfunction WillChangeListenersRecord(name) {\n  var specificHandlerMethodName = WillChangeListenerSpecificHandlerMethodName.get(name);\n  if (!specificHandlerMethodName) {\n    specificHandlerMethodName = \"handle\";\n    specificHandlerMethodName += name;\n    specificHandlerMethodName += \"WillChange\";\n    WillChangeListenerSpecificHandlerMethodName.set(name, specificHandlerMethodName);\n  }\n  this.specificHandlerMethodName = specificHandlerMethodName;\n  return this;\n}\nWillChangeListenersRecord.prototype = new ChangeListenersRecord();\nWillChangeListenersRecord.prototype.constructor = WillChangeListenersRecord;\nWillChangeListenersRecord.prototype.genericHandlerMethodName = \"handlePropertyWillChange\";","map":{"version":3,"names":["Map","require","ObjectChangeDescriptor","module","exports","name","isActive","_willChangeListeners","_changeListeners","Object","defineProperties","prototype","value","writable","willChangeListeners","get","willChangeListenersRecordConstructor","changeListeners","changeListenersRecordConstructor","ChangeListenersRecord","WillChangeListenersRecord","ListenerGhost","create","ChangeListenerSpecificHandlerMethodName","specificHandlerMethodName","set","_current","current","ghostCount","maxListenerGhostRatio","listenerGhostFilter","removeCurrentGostListenersIfNeeded","length","filter","dispatchBeforeChange","genericHandlerMethodName","WillChangeListenerSpecificHandlerMethodName","constructor"],"sources":["D:/Gits/bomes/node_modules/collections/listen/change-descriptor.js"],"sourcesContent":["/*\n    Copyright (c) 2016, Montage Studio Inc. All Rights Reserved.\n    3-Clause BSD License\n    https://github.com/montagejs/montage/blob/master/LICENSE.md\n*/\n\nvar Map = require(\"../_map\");\n\nvar ObjectChangeDescriptor = module.exports.ObjectChangeDescriptor = function ObjectChangeDescriptor(name) {\n    this.name = name;\n    this.isActive = false;\n    this._willChangeListeners = null;\n    this._changeListeners = null;\n\treturn this;\n}\n\nObject.defineProperties(ObjectChangeDescriptor.prototype,{\n    name: {\n\t\tvalue:null,\n\t\twritable: true\n\t},\n    isActive: {\n\t\tvalue:false,\n\t\twritable: true\n\t},\n\t_willChangeListeners: {\n\t\tvalue:null,\n\t\twritable: true\n\t},\n\twillChangeListeners: {\n\t\tget: function() {\n\t\t\treturn this._willChangeListeners || (this._willChangeListeners = new this.willChangeListenersRecordConstructor(this.name));\n\t\t}\n\t},\n\t_changeListeners: {\n\t\tvalue:null,\n\t\twritable: true\n\t},\n    changeListeners: {\n\t\tget: function() {\n\t\t\treturn this._changeListeners || (this._changeListeners = new this.changeListenersRecordConstructor(this.name));\n\t\t}\n\t},\n    changeListenersRecordConstructor: {\n        value: ChangeListenersRecord,\n        writable: true\n    },\n    willChangeListenersRecordConstructor: {\n        value: WillChangeListenersRecord,\n        writable: true\n    }\n\n});\n\nvar ListenerGhost = module.exports.ListenerGhost = Object.create(null);\nvar ChangeListenerSpecificHandlerMethodName = new Map();\n\n module.exports.ChangeListenersRecord = ChangeListenersRecord;\nfunction ChangeListenersRecord(name) {\n    var specificHandlerMethodName = ChangeListenerSpecificHandlerMethodName.get(name);\n    if(!specificHandlerMethodName) {\n        specificHandlerMethodName = \"handle\";\n        specificHandlerMethodName += name;\n        specificHandlerMethodName += \"Change\";\n        ChangeListenerSpecificHandlerMethodName.set(name,specificHandlerMethodName);\n    }\n    this._current = null;\n    this._current = null;\n    this.specificHandlerMethodName = specificHandlerMethodName;\n    return this;\n}\n\nObject.defineProperties(ChangeListenersRecord.prototype,{\n    _current: {\n\t\tvalue: null,\n\t\twritable: true\n\t},\n\tcurrent: {\n\t\tget: function() {\n            // if(this._current) {\n            //     console.log(this.constructor.name,\" with \",this._current.length,\" listeners: \", this._current);\n            // }\n            return this._current;\n            //return this._current || (this._current = []);\n\t\t},\n        set: function(value) {\n            this._current = value;\n        }\n\t},\n    ListenerGhost: {\n        value:ListenerGhost,\n        writable: true\n    },\n    ghostCount: {\n        value:0,\n        writable: true\n    },\n    maxListenerGhostRatio: {\n        value:0.3,\n        writable: true\n    },\n    listenerGhostFilter: {\n        value: function listenerGhostFilter(value) {\n          return value !== this.ListenerGhost;\n      }\n    },\n    removeCurrentGostListenersIfNeeded: {\n        value: function() {\n            if(this._current && this.ghostCount/this._current.length>this.maxListenerGhostRatio) {\n                this.ghostCount = 0;\n                this._current = this._current.filter(this.listenerGhostFilter,this);\n            }\n            return this._current;\n        }\n    },\n    dispatchBeforeChange: {\n        value: false,\n        writable: true\n    },\n    genericHandlerMethodName: {\n\t\tvalue: \"handlePropertyChange\",\n        writable: true\n\t}\n});\n\nmodule.exports.WillChangeListenersRecord = WillChangeListenersRecord;\nvar WillChangeListenerSpecificHandlerMethodName = new Map();\nfunction WillChangeListenersRecord(name) {\n    var specificHandlerMethodName = WillChangeListenerSpecificHandlerMethodName.get(name);\n    if(!specificHandlerMethodName) {\n        specificHandlerMethodName = \"handle\";\n        specificHandlerMethodName += name;\n        specificHandlerMethodName += \"WillChange\";\n        WillChangeListenerSpecificHandlerMethodName.set(name,specificHandlerMethodName);\n    }\n    this.specificHandlerMethodName = specificHandlerMethodName;\n\treturn this;\n}\nWillChangeListenersRecord.prototype = new ChangeListenersRecord();\nWillChangeListenersRecord.prototype.constructor = WillChangeListenersRecord;\nWillChangeListenersRecord.prototype.genericHandlerMethodName = \"handlePropertyWillChange\";\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;;AAEA,IAAIA,GAAG,GAAGC,OAAO,CAAC,SAAS,CAAC;AAE5B,IAAIC,sBAAsB,GAAGC,MAAM,CAACC,OAAO,CAACF,sBAAsB,GAAG,SAASA,sBAAsBA,CAACG,IAAI,EAAE;EACvG,IAAI,CAACA,IAAI,GAAGA,IAAI;EAChB,IAAI,CAACC,QAAQ,GAAG,KAAK;EACrB,IAAI,CAACC,oBAAoB,GAAG,IAAI;EAChC,IAAI,CAACC,gBAAgB,GAAG,IAAI;EAC/B,OAAO,IAAI;AACZ,CAAC;AAEDC,MAAM,CAACC,gBAAgB,CAACR,sBAAsB,CAACS,SAAS,EAAC;EACrDN,IAAI,EAAE;IACRO,KAAK,EAAC,IAAI;IACVC,QAAQ,EAAE;EACX,CAAC;EACEP,QAAQ,EAAE;IACZM,KAAK,EAAC,KAAK;IACXC,QAAQ,EAAE;EACX,CAAC;EACDN,oBAAoB,EAAE;IACrBK,KAAK,EAAC,IAAI;IACVC,QAAQ,EAAE;EACX,CAAC;EACDC,mBAAmB,EAAE;IACpBC,GAAG,EAAE,SAAAA,CAAA,EAAW;MACf,OAAO,IAAI,CAACR,oBAAoB,KAAK,IAAI,CAACA,oBAAoB,GAAG,IAAI,IAAI,CAACS,oCAAoC,CAAC,IAAI,CAACX,IAAI,CAAC,CAAC;IAC3H;EACD,CAAC;EACDG,gBAAgB,EAAE;IACjBI,KAAK,EAAC,IAAI;IACVC,QAAQ,EAAE;EACX,CAAC;EACEI,eAAe,EAAE;IACnBF,GAAG,EAAE,SAAAA,CAAA,EAAW;MACf,OAAO,IAAI,CAACP,gBAAgB,KAAK,IAAI,CAACA,gBAAgB,GAAG,IAAI,IAAI,CAACU,gCAAgC,CAAC,IAAI,CAACb,IAAI,CAAC,CAAC;IAC/G;EACD,CAAC;EACEa,gCAAgC,EAAE;IAC9BN,KAAK,EAAEO,qBAAqB;IAC5BN,QAAQ,EAAE;EACd,CAAC;EACDG,oCAAoC,EAAE;IAClCJ,KAAK,EAAEQ,yBAAyB;IAChCP,QAAQ,EAAE;EACd;AAEJ,CAAC,CAAC;AAEF,IAAIQ,aAAa,GAAGlB,MAAM,CAACC,OAAO,CAACiB,aAAa,GAAGZ,MAAM,CAACa,MAAM,CAAC,IAAI,CAAC;AACtE,IAAIC,uCAAuC,GAAG,IAAIvB,GAAG,CAAC,CAAC;AAEtDG,MAAM,CAACC,OAAO,CAACe,qBAAqB,GAAGA,qBAAqB;AAC7D,SAASA,qBAAqBA,CAACd,IAAI,EAAE;EACjC,IAAImB,yBAAyB,GAAGD,uCAAuC,CAACR,GAAG,CAACV,IAAI,CAAC;EACjF,IAAG,CAACmB,yBAAyB,EAAE;IAC3BA,yBAAyB,GAAG,QAAQ;IACpCA,yBAAyB,IAAInB,IAAI;IACjCmB,yBAAyB,IAAI,QAAQ;IACrCD,uCAAuC,CAACE,GAAG,CAACpB,IAAI,EAACmB,yBAAyB,CAAC;EAC/E;EACA,IAAI,CAACE,QAAQ,GAAG,IAAI;EACpB,IAAI,CAACA,QAAQ,GAAG,IAAI;EACpB,IAAI,CAACF,yBAAyB,GAAGA,yBAAyB;EAC1D,OAAO,IAAI;AACf;AAEAf,MAAM,CAACC,gBAAgB,CAACS,qBAAqB,CAACR,SAAS,EAAC;EACpDe,QAAQ,EAAE;IACZd,KAAK,EAAE,IAAI;IACXC,QAAQ,EAAE;EACX,CAAC;EACDc,OAAO,EAAE;IACRZ,GAAG,EAAE,SAAAA,CAAA,EAAW;MACN;MACA;MACA;MACA,OAAO,IAAI,CAACW,QAAQ;MACpB;IACV,CAAC;;IACKD,GAAG,EAAE,SAAAA,CAASb,KAAK,EAAE;MACjB,IAAI,CAACc,QAAQ,GAAGd,KAAK;IACzB;EACP,CAAC;EACES,aAAa,EAAE;IACXT,KAAK,EAACS,aAAa;IACnBR,QAAQ,EAAE;EACd,CAAC;EACDe,UAAU,EAAE;IACRhB,KAAK,EAAC,CAAC;IACPC,QAAQ,EAAE;EACd,CAAC;EACDgB,qBAAqB,EAAE;IACnBjB,KAAK,EAAC,GAAG;IACTC,QAAQ,EAAE;EACd,CAAC;EACDiB,mBAAmB,EAAE;IACjBlB,KAAK,EAAE,SAASkB,mBAAmBA,CAAClB,KAAK,EAAE;MACzC,OAAOA,KAAK,KAAK,IAAI,CAACS,aAAa;IACvC;EACF,CAAC;EACDU,kCAAkC,EAAE;IAChCnB,KAAK,EAAE,SAAAA,CAAA,EAAW;MACd,IAAG,IAAI,CAACc,QAAQ,IAAI,IAAI,CAACE,UAAU,GAAC,IAAI,CAACF,QAAQ,CAACM,MAAM,GAAC,IAAI,CAACH,qBAAqB,EAAE;QACjF,IAAI,CAACD,UAAU,GAAG,CAAC;QACnB,IAAI,CAACF,QAAQ,GAAG,IAAI,CAACA,QAAQ,CAACO,MAAM,CAAC,IAAI,CAACH,mBAAmB,EAAC,IAAI,CAAC;MACvE;MACA,OAAO,IAAI,CAACJ,QAAQ;IACxB;EACJ,CAAC;EACDQ,oBAAoB,EAAE;IAClBtB,KAAK,EAAE,KAAK;IACZC,QAAQ,EAAE;EACd,CAAC;EACDsB,wBAAwB,EAAE;IAC5BvB,KAAK,EAAE,sBAAsB;IACvBC,QAAQ,EAAE;EACjB;AACD,CAAC,CAAC;AAEFV,MAAM,CAACC,OAAO,CAACgB,yBAAyB,GAAGA,yBAAyB;AACpE,IAAIgB,2CAA2C,GAAG,IAAIpC,GAAG,CAAC,CAAC;AAC3D,SAASoB,yBAAyBA,CAACf,IAAI,EAAE;EACrC,IAAImB,yBAAyB,GAAGY,2CAA2C,CAACrB,GAAG,CAACV,IAAI,CAAC;EACrF,IAAG,CAACmB,yBAAyB,EAAE;IAC3BA,yBAAyB,GAAG,QAAQ;IACpCA,yBAAyB,IAAInB,IAAI;IACjCmB,yBAAyB,IAAI,YAAY;IACzCY,2CAA2C,CAACX,GAAG,CAACpB,IAAI,EAACmB,yBAAyB,CAAC;EACnF;EACA,IAAI,CAACA,yBAAyB,GAAGA,yBAAyB;EAC7D,OAAO,IAAI;AACZ;AACAJ,yBAAyB,CAACT,SAAS,GAAG,IAAIQ,qBAAqB,CAAC,CAAC;AACjEC,yBAAyB,CAACT,SAAS,CAAC0B,WAAW,GAAGjB,yBAAyB;AAC3EA,yBAAyB,CAACT,SAAS,CAACwB,wBAAwB,GAAG,0BAA0B"},"metadata":{},"sourceType":"script","externalDependencies":[]}