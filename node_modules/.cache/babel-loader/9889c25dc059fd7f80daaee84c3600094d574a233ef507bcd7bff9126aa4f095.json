{"ast":null,"code":"/**\n    accepts a string; returns the string with regex metacharacters escaped.\n    the returned string can safely be used within a regex to match a literal\n    string. escaped characters are [, ], {, }, (, ), -, *, +, ?, ., \\, ^, $,\n    |, #, [comma], and whitespace.\n*/\nif (!RegExp.escape) {\n  var special = /[-[\\]{}()*+?.\\\\^$|,#\\s]/g;\n  RegExp.escape = function (string) {\n    return string.replace(special, \"\\\\$&\");\n  };\n}","map":{"version":3,"names":["RegExp","escape","special","string","replace"],"sources":["D:/Gits/bomes/node_modules/collections/shim-regexp.js"],"sourcesContent":["\n/**\n    accepts a string; returns the string with regex metacharacters escaped.\n    the returned string can safely be used within a regex to match a literal\n    string. escaped characters are [, ], {, }, (, ), -, *, +, ?, ., \\, ^, $,\n    |, #, [comma], and whitespace.\n*/\nif (!RegExp.escape) {\n    var special = /[-[\\]{}()*+?.\\\\^$|,#\\s]/g;\n    RegExp.escape = function (string) {\n        return string.replace(special, \"\\\\$&\");\n    };\n}\n\n"],"mappings":"AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,CAACA,MAAM,CAACC,MAAM,EAAE;EAChB,IAAIC,OAAO,GAAG,0BAA0B;EACxCF,MAAM,CAACC,MAAM,GAAG,UAAUE,MAAM,EAAE;IAC9B,OAAOA,MAAM,CAACC,OAAO,CAACF,OAAO,EAAE,MAAM,CAAC;EAC1C,CAAC;AACL"},"metadata":{},"sourceType":"script","externalDependencies":[]}