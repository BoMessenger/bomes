{"ast":null,"code":"\"use strict\";\n\nmodule.exports = Iterator;\nvar Object = require(\"./shim-object\");\nvar GenericCollection = require(\"./generic-collection\");\n\n// upgrades an iterable to a Iterator\nfunction Iterator(iterable, standardMode) {\n  /*\n      standardMode should be passed as true by a collection that uses Iterator\n      to provide a polyfill of standard iterations methods like entries() and values(),\n      as Collection's iterator behaves differently than standards ones when it comes to sparse arrays.\n      without passing standardMode, new Iterator instances will behave as intended independently of standards.\n  */\n  var values = standardMode && iterable && iterable.values && iterable.values();\n  if (values && typeof values.next === \"function\") {\n    return values;\n  }\n  if (!(this instanceof Iterator)) {\n    return new Iterator(iterable);\n  }\n  if (Array.isArray(iterable) || typeof iterable === \"string\") return Iterator.iterate(iterable);\n  iterable = Object(iterable);\n  if (iterable instanceof Iterator) {\n    return iterable;\n  } else if (iterable.next) {\n    this.next = function () {\n      return iterable.next();\n    };\n  } else if (iterable.iterate) {\n    var iterator = iterable.iterate();\n    this.next = function () {\n      return iterator.next();\n    };\n  } else if (Object.prototype.toString.call(iterable) === \"[object Function]\") {\n    this.next = iterable;\n  } else {\n    throw new TypeError(\"Can't iterate \" + iterable);\n  }\n}\nIterator.prototype.forEach = GenericCollection.prototype.forEach;\nIterator.prototype.map = GenericCollection.prototype.map;\nIterator.prototype.filter = GenericCollection.prototype.filter;\nIterator.prototype.every = GenericCollection.prototype.every;\nIterator.prototype.some = GenericCollection.prototype.some;\nIterator.prototype.any = GenericCollection.prototype.any;\nIterator.prototype.all = GenericCollection.prototype.all;\nIterator.prototype.min = GenericCollection.prototype.min;\nIterator.prototype.max = GenericCollection.prototype.max;\nIterator.prototype.sum = GenericCollection.prototype.sum;\nIterator.prototype.average = GenericCollection.prototype.average;\nIterator.prototype.flatten = GenericCollection.prototype.flatten;\nIterator.prototype.zip = GenericCollection.prototype.zip;\nIterator.prototype.enumerate = GenericCollection.prototype.enumerate;\nIterator.prototype.sorted = GenericCollection.prototype.sorted;\nIterator.prototype.group = GenericCollection.prototype.group;\nIterator.prototype.reversed = GenericCollection.prototype.reversed;\nIterator.prototype.toArray = GenericCollection.prototype.toArray;\nIterator.prototype.toObject = GenericCollection.prototype.toObject;\nIterator.prototype.iterator = GenericCollection.prototype.iterator;\nIterator.prototype.__iterationObject = null;\nObject.defineProperty(Iterator.prototype, \"_iterationObject\", {\n  get: function () {\n    return this.__iterationObject || (this.__iterationObject = {\n      done: false,\n      value: void 0\n    });\n  }\n});\n\n// this is a bit of a cheat so flatten and such work with the generic\n// reducible\nIterator.prototype.constructClone = function (values) {\n  var clone = [];\n  clone.addEach(values);\n  return clone;\n};\nIterator.prototype.mapIterator = function (callback /*, thisp*/) {\n  var self = Iterator(this),\n    thisp = arguments[1],\n    i = 0;\n  if (Object.prototype.toString.call(callback) != \"[object Function]\") throw new TypeError();\n  return new self.constructor(function () {\n    if (self._iterationObject.done !== true) {\n      var callbackValue = callback.call(thisp, self.next().value, i++, self);\n      self._iterationObject.value = callbackValue;\n    }\n    return self._iterationObject;\n  });\n};\nIterator.prototype.filterIterator = function (callback /*, thisp*/) {\n  var self = Iterator(this),\n    thisp = arguments[1],\n    i = 0;\n  if (Object.prototype.toString.call(callback) != \"[object Function]\") throw new TypeError();\n  return new self.constructor(function () {\n    var nextEntry;\n    while (true) {\n      nextEntry = self.next();\n      if (nextEntry.done !== true) {\n        if (callback.call(thisp, nextEntry.value, i++, self)) return nextEntry;\n      } else {\n        //done true and value undefined at this point\n        return nextEntry;\n      }\n    }\n  });\n};\nIterator.prototype.reduce = function (callback /*, initial, thisp*/) {\n  var self = Iterator(this),\n    result = arguments[1],\n    thisp = arguments[2],\n    i = 0,\n    nextEntry;\n  if (Object.prototype.toString.call(callback) != \"[object Function]\") throw new TypeError();\n\n  // first iteration unrolled\n  nextEntry = self.next();\n  if (nextEntry.done === true) {\n    if (arguments.length > 1) {\n      return arguments[1]; // initial\n    } else {\n      throw TypeError(\"cannot reduce a value from an empty iterator with no initial value\");\n    }\n  }\n  if (arguments.length > 1) {\n    result = callback.call(thisp, result, nextEntry.value, i, self);\n  } else {\n    result = nextEntry.value;\n  }\n  i++;\n  // remaining entries\n  while (true) {\n    nextEntry = self.next();\n    if (nextEntry.done === true) {\n      return result;\n    }\n    result = callback.call(thisp, result, nextEntry.value, i, self);\n    i++;\n  }\n};\nIterator.prototype.concat = function () {\n  return Iterator.concat(Array.prototype.concat.apply(this, arguments));\n};\nIterator.prototype.dropWhile = function (callback /*, thisp */) {\n  var self = Iterator(this),\n    thisp = arguments[1],\n    stopped = false,\n    stopValue,\n    nextEntry,\n    i = 0;\n  if (Object.prototype.toString.call(callback) != \"[object Function]\") throw new TypeError();\n  while (true) {\n    nextEntry = self.next();\n    if (nextEntry.done === true) {\n      break;\n    }\n    if (!callback.call(thisp, nextEntry.value, i, self)) {\n      stopped = true;\n      stopValue = nextEntry.value;\n      break;\n    }\n    i++;\n  }\n  if (stopped) {\n    return self.constructor([stopValue]).concat(self);\n  } else {\n    return self.constructor([]);\n  }\n};\nIterator.prototype.takeWhile = function (callback /*, thisp*/) {\n  var self = Iterator(this),\n    thisp = arguments[1],\n    nextEntry,\n    i = 0;\n  if (Object.prototype.toString.call(callback) != \"[object Function]\") throw new TypeError();\n  return new self.constructor(function () {\n    if (self._iterationObject.done !== true) {\n      var value = self.next().value;\n      if (callback.call(thisp, value, i++, self)) {\n        self._iterationObject.value = value;\n      } else {\n        self._iterationObject.done = true;\n        self._iterationObject.value = void 0;\n      }\n    }\n    return self._iterationObject;\n  });\n};\nIterator.prototype.zipIterator = function () {\n  return Iterator.unzip(Array.prototype.concat.apply(this, arguments));\n};\nIterator.prototype.enumerateIterator = function (start) {\n  return Iterator.count(start).zipIterator(this);\n};\n\n// creates an iterator for Array and String\nIterator.iterate = function (iterable) {\n  var start;\n  start = 0;\n  return new Iterator(function () {\n    // advance to next owned entry\n    if (typeof iterable === \"object\") {\n      while (!(start in iterable)) {\n        // deliberately late bound\n        if (start >= iterable.length) {\n          this._iterationObject.done = true;\n          this._iterationObject.value = void 0;\n          break;\n        } else start += 1;\n      }\n    } else if (start >= iterable.length) {\n      this._iterationObject.done = true;\n      this._iterationObject.value = void 0;\n    }\n    if (!this._iterationObject.done) {\n      this._iterationObject.value = iterable[start];\n      start += 1;\n    }\n    return this._iterationObject;\n  });\n};\nIterator.cycle = function (cycle, times) {\n  var next;\n  if (arguments.length < 2) times = Infinity;\n  //cycle = Iterator(cycle).toArray();\n  return new Iterator(function () {\n    var iteration, nextEntry;\n    if (next) {\n      nextEntry = next();\n    }\n    if (!next || nextEntry.done === true) {\n      if (times > 0) {\n        times--;\n        iteration = Iterator.iterate(cycle);\n        nextEntry = (next = iteration.next.bind(iteration))();\n      } else {\n        this._iterationObject.done = true;\n        nextEntry = this._iterationObject;\n      }\n    }\n    return nextEntry;\n  });\n};\nIterator.concat = function (iterators) {\n  iterators = Iterator(iterators);\n  var next;\n  return new Iterator(function () {\n    var iteration, nextEntry;\n    if (next) nextEntry = next();\n    if (!nextEntry || nextEntry.done === true) {\n      nextEntry = iterators.next();\n      if (nextEntry.done === false) {\n        iteration = Iterator(nextEntry.value);\n        next = iteration.next.bind(iteration);\n        return next();\n      } else {\n        return nextEntry;\n      }\n    } else return nextEntry;\n  });\n};\nIterator.unzip = function (iterators) {\n  iterators = Iterator(iterators).map(Iterator);\n  if (iterators.length === 0) return new Iterator([]);\n  return new Iterator(function () {\n    var stopped, nextEntry;\n    var result = iterators.map(function (iterator) {\n      nextEntry = iterator.next();\n      if (nextEntry.done === true) {\n        stopped = true;\n      }\n      return nextEntry.value;\n    });\n    if (stopped) {\n      this._iterationObject.done = true;\n      this._iterationObject.value = void 0;\n    } else {\n      this._iterationObject.value = result;\n    }\n    return this._iterationObject;\n  });\n};\nIterator.zip = function () {\n  return Iterator.unzip(Array.prototype.slice.call(arguments));\n};\nIterator.chain = function () {\n  return Iterator.concat(Array.prototype.slice.call(arguments));\n};\nIterator.range = function (start, stop, step) {\n  if (arguments.length < 3) {\n    step = 1;\n  }\n  if (arguments.length < 2) {\n    stop = start;\n    start = 0;\n  }\n  start = start || 0;\n  step = step || 1;\n  return new Iterator(function () {\n    if (start >= stop) {\n      this._iterationObject.done = true;\n      this._iterationObject.value = void 0;\n    }\n    var result = start;\n    start += step;\n    this._iterationObject.value = result;\n    return this._iterationObject;\n  });\n};\nIterator.count = function (start, step) {\n  return Iterator.range(start, Infinity, step);\n};\nIterator.repeat = function (value, times) {\n  return new Iterator.range(times).mapIterator(function () {\n    return value;\n  });\n};","map":{"version":3,"names":["module","exports","Iterator","Object","require","GenericCollection","iterable","standardMode","values","next","Array","isArray","iterate","iterator","prototype","toString","call","TypeError","forEach","map","filter","every","some","any","all","min","max","sum","average","flatten","zip","enumerate","sorted","group","reversed","toArray","toObject","__iterationObject","defineProperty","get","done","value","constructClone","clone","addEach","mapIterator","callback","self","thisp","arguments","i","constructor","_iterationObject","callbackValue","filterIterator","nextEntry","reduce","result","length","concat","apply","dropWhile","stopped","stopValue","takeWhile","zipIterator","unzip","enumerateIterator","start","count","cycle","times","Infinity","iteration","bind","iterators","slice","chain","range","stop","step","repeat"],"sources":["D:/Gits/bomes/node_modules/collections/iterator.js"],"sourcesContent":["\"use strict\";\n\nmodule.exports = Iterator;\n\nvar Object = require(\"./shim-object\");\nvar GenericCollection = require(\"./generic-collection\");\n\n// upgrades an iterable to a Iterator\nfunction Iterator(iterable, standardMode) {\n\n    /*\n        standardMode should be passed as true by a collection that uses Iterator\n        to provide a polyfill of standard iterations methods like entries() and values(),\n        as Collection's iterator behaves differently than standards ones when it comes to sparse arrays.\n        without passing standardMode, new Iterator instances will behave as intended independently of standards.\n    */\n    var values = standardMode && iterable && iterable.values && iterable.values();\n    if(values && typeof values.next === \"function\" ) {\n        return values;\n    }\n\n    if (!(this instanceof Iterator)) {\n        return new Iterator(iterable);\n    }\n\n    if (Array.isArray(iterable) || typeof iterable === \"string\")\n        return Iterator.iterate(iterable);\n\n    iterable = Object(iterable);\n\n    if (iterable instanceof Iterator) {\n        return iterable;\n    } else if (iterable.next) {\n        this.next = function () {\n            return iterable.next();\n        };\n    } else if (iterable.iterate) {\n        var iterator = iterable.iterate();\n        this.next = function () {\n            return iterator.next();\n        };\n    } else if (Object.prototype.toString.call(iterable) === \"[object Function]\") {\n        this.next = iterable;\n    } else {\n        throw new TypeError(\"Can't iterate \" + iterable);\n    }\n\n}\n\nIterator.prototype.forEach = GenericCollection.prototype.forEach;\nIterator.prototype.map = GenericCollection.prototype.map;\nIterator.prototype.filter = GenericCollection.prototype.filter;\nIterator.prototype.every = GenericCollection.prototype.every;\nIterator.prototype.some = GenericCollection.prototype.some;\nIterator.prototype.any = GenericCollection.prototype.any;\nIterator.prototype.all = GenericCollection.prototype.all;\nIterator.prototype.min = GenericCollection.prototype.min;\nIterator.prototype.max = GenericCollection.prototype.max;\nIterator.prototype.sum = GenericCollection.prototype.sum;\nIterator.prototype.average = GenericCollection.prototype.average;\nIterator.prototype.flatten = GenericCollection.prototype.flatten;\nIterator.prototype.zip = GenericCollection.prototype.zip;\nIterator.prototype.enumerate = GenericCollection.prototype.enumerate;\nIterator.prototype.sorted = GenericCollection.prototype.sorted;\nIterator.prototype.group = GenericCollection.prototype.group;\nIterator.prototype.reversed = GenericCollection.prototype.reversed;\nIterator.prototype.toArray = GenericCollection.prototype.toArray;\nIterator.prototype.toObject = GenericCollection.prototype.toObject;\nIterator.prototype.iterator = GenericCollection.prototype.iterator;\n\nIterator.prototype.__iterationObject = null;\nObject.defineProperty(Iterator.prototype,\"_iterationObject\", {\n    get: function() {\n        return this.__iterationObject || (this.__iterationObject = { done: false, value:void 0});\n    }\n});\n\n\n// this is a bit of a cheat so flatten and such work with the generic\n// reducible\nIterator.prototype.constructClone = function (values) {\n    var clone = [];\n    clone.addEach(values);\n    return clone;\n};\n\nIterator.prototype.mapIterator = function (callback /*, thisp*/) {\n    var self = Iterator(this),\n        thisp = arguments[1],\n        i = 0;\n\n    if (Object.prototype.toString.call(callback) != \"[object Function]\")\n        throw new TypeError();\n\n    return new self.constructor(function () {\n        if(self._iterationObject.done !== true) {\n            var callbackValue = callback.call(thisp, self.next().value, i++, self);\n            self._iterationObject.value = callbackValue;\n        }\n        return self._iterationObject;\n    });\n};\n\nIterator.prototype.filterIterator = function (callback /*, thisp*/) {\n    var self = Iterator(this),\n        thisp = arguments[1],\n        i = 0;\n\n    if (Object.prototype.toString.call(callback) != \"[object Function]\")\n        throw new TypeError();\n\n    return new self.constructor(function () {\n        var nextEntry;\n        while (true) {\n            nextEntry = self.next();\n            if(nextEntry.done !== true) {\n                if (callback.call(thisp, nextEntry.value, i++, self))\n                    return nextEntry;\n            }\n            else {\n                //done true and value undefined at this point\n                return nextEntry;\n            }\n        }\n    });\n};\n\nIterator.prototype.reduce = function (callback /*, initial, thisp*/) {\n    var self = Iterator(this),\n        result = arguments[1],\n        thisp = arguments[2],\n        i = 0,\n        nextEntry;\n\n    if (Object.prototype.toString.call(callback) != \"[object Function]\")\n        throw new TypeError();\n\n    // first iteration unrolled\n    nextEntry = self.next();\n    if(nextEntry.done === true) {\n        if (arguments.length > 1) {\n            return arguments[1]; // initial\n        } else {\n            throw TypeError(\"cannot reduce a value from an empty iterator with no initial value\");\n        }\n    }\n    if (arguments.length > 1) {\n        result = callback.call(thisp, result, nextEntry.value, i, self);\n    } else {\n        result = nextEntry.value;\n    }\n    i++;\n    // remaining entries\n    while (true) {\n        nextEntry = self.next();\n        if(nextEntry.done === true) {\n            return result;\n        }\n        result = callback.call(thisp, result, nextEntry.value, i, self);\n        i++;\n    }\n\n};\n\nIterator.prototype.concat = function () {\n    return Iterator.concat(\n        Array.prototype.concat.apply(this, arguments)\n    );\n};\n\nIterator.prototype.dropWhile = function (callback /*, thisp */) {\n    var self = Iterator(this),\n        thisp = arguments[1],\n        stopped = false,\n        stopValue,\n        nextEntry,\n        i = 0;\n\n    if (Object.prototype.toString.call(callback) != \"[object Function]\")\n        throw new TypeError();\n\n    while (true) {\n        nextEntry = self.next();\n        if(nextEntry.done === true) {\n            break;\n        }\n        if (!callback.call(thisp, nextEntry.value, i, self)) {\n            stopped = true;\n            stopValue = nextEntry.value;\n            break;\n        }\n        i++;\n    }\n\n    if (stopped) {\n        return self.constructor([stopValue]).concat(self);\n    } else {\n        return self.constructor([]);\n    }\n};\n\nIterator.prototype.takeWhile = function (callback /*, thisp*/) {\n    var self = Iterator(this),\n        thisp = arguments[1],\n        nextEntry,\n        i = 0;\n\n    if (Object.prototype.toString.call(callback) != \"[object Function]\")\n        throw new TypeError();\n\n    return new self.constructor(function () {\n        if(self._iterationObject.done !== true) {\n            var value = self.next().value;\n            if(callback.call(thisp, value, i++, self)) {\n                self._iterationObject.value = value;\n            }\n            else {\n                self._iterationObject.done = true;\n                self._iterationObject.value = void 0;\n            }\n        }\n        return self._iterationObject;\n    });\n\n};\n\nIterator.prototype.zipIterator = function () {\n    return Iterator.unzip(\n        Array.prototype.concat.apply(this, arguments)\n    );\n};\n\nIterator.prototype.enumerateIterator = function (start) {\n    return Iterator.count(start).zipIterator(this);\n};\n\n// creates an iterator for Array and String\nIterator.iterate = function (iterable) {\n    var start;\n    start = 0;\n    return new Iterator(function () {\n        // advance to next owned entry\n        if (typeof iterable === \"object\") {\n            while (!(start in iterable)) {\n                // deliberately late bound\n                if (start >= iterable.length) {\n                    this._iterationObject.done = true;\n                    this._iterationObject.value = void 0;\n                    break;\n                }\n                else start += 1;\n            }\n        } else if (start >= iterable.length) {\n            this._iterationObject.done = true;\n            this._iterationObject.value = void 0;\n        }\n\n        if(!this._iterationObject.done) {\n            this._iterationObject.value = iterable[start];\n            start += 1;\n        }\n        return this._iterationObject;\n    });\n};\n\nIterator.cycle = function (cycle, times) {\n    var next;\n    if (arguments.length < 2)\n        times = Infinity;\n    //cycle = Iterator(cycle).toArray();\n    return new Iterator(function () {\n        var iteration, nextEntry;\n\n        if(next) {\n            nextEntry = next();\n        }\n\n        if(!next || nextEntry.done === true) {\n            if (times > 0) {\n                times--;\n                iteration = Iterator.iterate(cycle);\n                nextEntry = (next = iteration.next.bind(iteration))();\n            }\n            else {\n                this._iterationObject.done = true;\n                nextEntry = this._iterationObject;            }\n        }\n        return nextEntry;\n    });\n};\n\nIterator.concat = function (iterators) {\n    iterators = Iterator(iterators);\n    var next;\n    return new Iterator(function (){\n        var iteration, nextEntry;\n        if(next) nextEntry = next();\n        if(!nextEntry || nextEntry.done === true) {\n            nextEntry = iterators.next();\n            if(nextEntry.done === false) {\n                iteration = Iterator(nextEntry.value);\n                next = iteration.next.bind(iteration);\n                return next();\n            }\n            else {\n                return nextEntry;\n            }\n        }\n        else return nextEntry;\n    });\n};\n\nIterator.unzip = function (iterators) {\n    iterators = Iterator(iterators).map(Iterator);\n    if (iterators.length === 0)\n        return new Iterator([]);\n    return new Iterator(function () {\n        var stopped, nextEntry;\n        var result = iterators.map(function (iterator) {\n            nextEntry = iterator.next();\n            if (nextEntry.done === true ) {\n                stopped = true;\n            }\n            return nextEntry.value;\n        });\n        if (stopped) {\n            this._iterationObject.done = true;\n            this._iterationObject.value = void 0;\n        }\n        else {\n            this._iterationObject.value = result;\n        }\n        return this._iterationObject;\n    });\n};\n\nIterator.zip = function () {\n    return Iterator.unzip(\n        Array.prototype.slice.call(arguments)\n    );\n};\n\nIterator.chain = function () {\n    return Iterator.concat(\n        Array.prototype.slice.call(arguments)\n    );\n};\n\nIterator.range = function (start, stop, step) {\n    if (arguments.length < 3) {\n        step = 1;\n    }\n    if (arguments.length < 2) {\n        stop = start;\n        start = 0;\n    }\n    start = start || 0;\n    step = step || 1;\n    return new Iterator(function () {\n        if (start >= stop) {\n            this._iterationObject.done = true;\n            this._iterationObject.value = void 0;\n        }\n        var result = start;\n        start += step;\n        this._iterationObject.value = result;\n\n        return this._iterationObject;\n    });\n};\n\nIterator.count = function (start, step) {\n    return Iterator.range(start, Infinity, step);\n};\n\nIterator.repeat = function (value, times) {\n    return new Iterator.range(times).mapIterator(function () {\n        return value;\n    });\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}