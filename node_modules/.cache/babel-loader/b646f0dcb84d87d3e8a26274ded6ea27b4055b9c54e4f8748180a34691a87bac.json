{"ast":null,"code":"\"use strict\";\n\nvar Shim = require(\"./shim\");\nvar GenericCollection = require(\"./generic-collection\");\nvar GenericSet = require(\"./generic-set\");\nvar Set, GlobalSet, CollectionsSet;\nif (global.Set !== void 0 && typeof global.Set.prototype.values === \"function\") {\n  GlobalSet = module.exports = global.Set;\n  GlobalSet.Set = GlobalSet; // hack so require(\"set\").Set will work in MontageJS\n\n  GlobalSet.prototype.reduce = function (callback, basis /*, thisp*/) {\n    var thisp = arguments[2];\n    this.forEach(function (value) {\n      basis = callback.call(thisp, basis, value, this);\n    });\n    return basis;\n  };\n  GlobalSet.prototype.reduceRight = function (callback, basis /*, thisp*/) {\n    var thisp = arguments[2];\n    var setIterator = this.values();\n    var size = this.size;\n    var reverseOrder = new Array(this.size);\n    var value,\n      i = size;\n    // Fill 'reverseOrder' with values of Set in inverted order.\n    while (value = setIterator.next().value) {\n      reverseOrder[--i] = value;\n    }\n    // Iterate over reversed values and callback.\n    while (i < size) {\n      basis = callback.call(thisp, basis, reverseOrder[i++], this);\n    }\n    return basis;\n  };\n  GlobalSet.prototype.equals = function (that, equals) {\n    var self = this;\n    return that && typeof that.reduce === \"function\" && this.size === (that.size || that.length) && that.reduce(function (equal, value) {\n      return equal && self.has(value, equals);\n    }, true);\n  };\n  GlobalSet.prototype.constructClone = function (values) {\n    return new this.constructor(values, this.contentEquals, this.contentHash, this.getDefault);\n  };\n  GlobalSet.prototype.toJSON = function () {\n    return this.entriesArray();\n  };\n  GlobalSet.prototype.one = function () {\n    if (this.size > 0) {\n      return this.values().next().value;\n    }\n    return undefined;\n  };\n  GlobalSet.prototype.pop = function () {\n    if (this.size) {\n      var setIterator = this.values(),\n        aValue,\n        value;\n      while (aValue = setIterator.next().value) {\n        value = aValue;\n      }\n      this[\"delete\"](value, this.size - 1);\n      return value;\n    }\n  };\n  GlobalSet.prototype.shift = function () {\n    if (this.size) {\n      var firstValue = this.values().next().value;\n      this[\"delete\"](firstValue, 0);\n      return firstValue;\n    }\n  };\n\n  //Backward compatibility:\n  Object.defineProperty(GlobalSet.prototype, \"length\", {\n    get: function () {\n      return this.size;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  GlobalSet.from = function (value) {\n    var result = new this();\n    result.addEach(value);\n    return result;\n  };\n  Object.addEach(GlobalSet.prototype, GenericCollection.prototype, false);\n  Object.addEach(GlobalSet.prototype, GenericSet.prototype, false);\n}\nvar List = require(\"./_list\");\nvar FastSet = require(\"./_fast-set\");\nvar Iterator = require(\"./iterator\");\nCollectionsSet = function CollectionsSet(values, equals, hash, getDefault) {\n  return CollectionsSet._init(CollectionsSet, this, values, equals, hash, getDefault);\n};\nCollectionsSet._init = function (constructor, object, values, equals, hash, getDefault) {\n  if (!(object instanceof constructor)) {\n    return new constructor(values, equals, hash, getDefault);\n  }\n  equals = equals || Object.equals;\n  hash = hash || Object.hash;\n  getDefault = getDefault || Function.noop;\n  object.contentEquals = equals;\n  object.contentHash = hash;\n  object.getDefault = getDefault;\n  // a list of values in insertion order, used for all operations that depend\n  // on iterating in insertion order\n  object.order = new object.Order(undefined, equals);\n  // a set of nodes from the order list, indexed by the corresponding value,\n  // used for all operations that need to quickly seek  value in the list\n  object.store = new object.Store(undefined, function (a, b) {\n    return equals(a.value, b.value);\n  }, function (node) {\n    return hash(node.value);\n  });\n  object.length = 0;\n  object.addEach(values);\n};\nCollectionsSet.Set = CollectionsSet; // hack so require(\"set\").Set will work in MontageJS\nCollectionsSet.CollectionsSet = CollectionsSet;\nObject.addEach(CollectionsSet.prototype, GenericCollection.prototype);\nObject.addEach(CollectionsSet.prototype, GenericSet.prototype);\nCollectionsSet.from = GenericCollection.from;\nObject.defineProperty(CollectionsSet.prototype, \"size\", GenericCollection._sizePropertyDescriptor);\n\n//Overrides for consistency:\n// Set.prototype.forEach = GenericCollection.prototype.forEach;\n\nCollectionsSet.prototype.Order = List;\nCollectionsSet.prototype.Store = FastSet;\nCollectionsSet.prototype.constructClone = function (values) {\n  return new this.constructor(values, this.contentEquals, this.contentHash, this.getDefault);\n};\nCollectionsSet.prototype.has = function (value) {\n  var node = new this.order.Node(value);\n  return this.store.has(node);\n};\nCollectionsSet.prototype.get = function (value, equals) {\n  if (equals) {\n    throw new Error(\"Set#get does not support second argument: equals\");\n  }\n  var node = new this.order.Node(value);\n  node = this.store.get(node);\n  if (node) {\n    return node.value;\n  } else {\n    return this.getDefault(value);\n  }\n};\nCollectionsSet.prototype.add = function (value) {\n  var node = new this.order.Node(value);\n  if (!this.store.has(node)) {\n    var index = this.length;\n    this.order.add(value);\n    node = this.order.head.prev;\n    this.store.add(node);\n    this.length++;\n    return true;\n  }\n  return false;\n};\nCollectionsSet.prototype[\"delete\"] = function (value, equals) {\n  if (equals) {\n    throw new Error(\"Set#delete does not support second argument: equals\");\n  }\n  var node = new this.order.Node(value);\n  if (this.store.has(node)) {\n    node = this.store.get(node);\n    this.store[\"delete\"](node); // removes from the set\n    this.order.splice(node, 1); // removes the node from the list\n    this.length--;\n    return true;\n  }\n  return false;\n};\nCollectionsSet.prototype.pop = function () {\n  if (this.length) {\n    var result = this.order.head.prev.value;\n    this[\"delete\"](result);\n    return result;\n  }\n};\nCollectionsSet.prototype.shift = function () {\n  if (this.length) {\n    var result = this.order.head.next.value;\n    this[\"delete\"](result);\n    return result;\n  }\n};\nCollectionsSet.prototype.one = function () {\n  if (this.length > 0) {\n    return this.store.one().value;\n  }\n};\nCollectionsSet.prototype.clear = function () {\n  this.store.clear();\n  this.order.clear();\n  this.length = 0;\n};\nObject.defineProperty(CollectionsSet.prototype, \"_clear\", {\n  value: CollectionsSet.prototype.clear\n});\nCollectionsSet.prototype.reduce = function (callback, basis /*, thisp*/) {\n  var thisp = arguments[2];\n  var list = this.order;\n  var index = 0;\n  return list.reduce(function (basis, value) {\n    return callback.call(thisp, basis, value, index++, this);\n  }, basis, this);\n};\nCollectionsSet.prototype.reduceRight = function (callback, basis /*, thisp*/) {\n  var thisp = arguments[2];\n  var list = this.order;\n  var index = this.length - 1;\n  return list.reduceRight(function (basis, value) {\n    return callback.call(thisp, basis, value, index--, this);\n  }, basis, this);\n};\nCollectionsSet.prototype.iterate = function () {\n  return this.order.iterate();\n};\nCollectionsSet.prototype.values = function () {\n  return new Iterator(this.valuesArray(), true);\n};\nCollectionsSet.prototype.log = function () {\n  var set = this.store;\n  return set.log.apply(set, arguments);\n};\nif (!GlobalSet) {\n  module.exports = CollectionsSet;\n} else {\n  GlobalSet.prototype.valuesArray = GenericSet.prototype.valuesArray;\n  GlobalSet.prototype.entriesArray = GenericSet.prototype.entriesArray;\n  module.exports = GlobalSet;\n  GlobalSet.CollectionsSet = CollectionsSet;\n}","map":{"version":3,"names":["Shim","require","GenericCollection","GenericSet","Set","GlobalSet","CollectionsSet","global","prototype","values","module","exports","reduce","callback","basis","thisp","arguments","forEach","value","call","reduceRight","setIterator","size","reverseOrder","Array","i","next","equals","that","self","length","equal","has","constructClone","constructor","contentEquals","contentHash","getDefault","toJSON","entriesArray","one","undefined","pop","aValue","shift","firstValue","Object","defineProperty","get","enumerable","configurable","from","result","addEach","List","FastSet","Iterator","hash","_init","object","Function","noop","order","Order","store","Store","a","b","node","_sizePropertyDescriptor","Node","Error","add","index","head","prev","splice","clear","list","iterate","valuesArray","log","set","apply"],"sources":["D:/Gits/bomes/node_modules/collections/_set.js"],"sourcesContent":["\"use strict\";\n\nvar Shim = require(\"./shim\");\nvar GenericCollection = require(\"./generic-collection\");\nvar GenericSet = require(\"./generic-set\");\nvar Set, GlobalSet, CollectionsSet;\n\n\nif((global.Set !== void 0) && (typeof global.Set.prototype.values === \"function\")) {\n\n    GlobalSet = module.exports = global.Set;\n    GlobalSet.Set = GlobalSet; // hack so require(\"set\").Set will work in MontageJS\n\n    GlobalSet.prototype.reduce = function (callback, basis /*, thisp*/) {\n        var thisp = arguments[2];\n        this.forEach(function(value) {\n            basis = callback.call(thisp, basis, value, this);\n        });\n        return basis;\n    };\n\n    GlobalSet.prototype.reduceRight = function (callback, basis /*, thisp*/) {\n        var thisp = arguments[2];\n        var setIterator = this.values();\n        var size = this.size;\n        var reverseOrder = new Array(this.size);\n        var value, i = size;\n        // Fill 'reverseOrder' with values of Set in inverted order.\n        while ((value = setIterator.next().value)) {\n            reverseOrder[--i] = value;\n        }\n        // Iterate over reversed values and callback.\n        while (i < size) {\n            basis = callback.call(thisp, basis, reverseOrder[i++], this);\n        }\n        return basis;\n    };\n\n    GlobalSet.prototype.equals = function (that, equals) {\n        var self = this;\n        return (\n            that && typeof that.reduce === \"function\" &&\n            this.size === (that.size || that.length) &&\n            that.reduce(function (equal, value) {\n                return equal && self.has(value, equals);\n            }, true)\n        );\n    };\n\n    GlobalSet.prototype.constructClone = function (values) {\n        return new this.constructor(values, this.contentEquals, this.contentHash, this.getDefault);\n    };\n\n    GlobalSet.prototype.toJSON = function () {\n        return this.entriesArray();\n    };\n\n    GlobalSet.prototype.one = function () {\n        if (this.size > 0) {\n            return this.values().next().value;\n        }\n        return undefined;\n    };\n\n    GlobalSet.prototype.pop = function () {\n        if (this.size) {\n            var setIterator = this.values(), aValue, value;\n            while(aValue = setIterator.next().value) {\n                value = aValue;\n            }\n            this[\"delete\"](value,this.size-1);\n            return value;\n        }\n    };\n\n    GlobalSet.prototype.shift = function () {\n        if (this.size) {\n            var firstValue = this.values().next().value;\n            this[\"delete\"](firstValue,0);\n            return firstValue;\n        }\n    };\n\n    //Backward compatibility:\n    Object.defineProperty(GlobalSet.prototype,\"length\",{\n        get: function() {\n            return this.size;\n        },\n        enumerable: true,\n        configurable:true\n    });\n\n    GlobalSet.from = function (value) {\n        var result = (new this);\n        result.addEach(value);\n        return result;\n    };\n\n    Object.addEach(GlobalSet.prototype, GenericCollection.prototype, false);\n    Object.addEach(GlobalSet.prototype, GenericSet.prototype, false);\n\n}\n\n\n\n    var List = require(\"./_list\");\n    var FastSet = require(\"./_fast-set\");\n    var Iterator = require(\"./iterator\");\n\n    CollectionsSet = function CollectionsSet(values, equals, hash, getDefault) {\n        return CollectionsSet._init(CollectionsSet, this, values, equals, hash, getDefault);\n    }\n\n    CollectionsSet._init = function (constructor, object, values, equals, hash, getDefault) {\n        if (!(object instanceof constructor)) {\n            return new constructor(values, equals, hash, getDefault);\n        }\n        equals = equals || Object.equals;\n        hash = hash || Object.hash;\n        getDefault = getDefault || Function.noop;\n        object.contentEquals = equals;\n        object.contentHash = hash;\n        object.getDefault = getDefault;\n        // a list of values in insertion order, used for all operations that depend\n        // on iterating in insertion order\n        object.order = new object.Order(undefined, equals);\n        // a set of nodes from the order list, indexed by the corresponding value,\n        // used for all operations that need to quickly seek  value in the list\n        object.store = new object.Store(\n            undefined,\n            function (a, b) {\n                return equals(a.value, b.value);\n            },\n            function (node) {\n                return hash(node.value);\n            }\n        );\n        object.length = 0;\n        object.addEach(values);\n\n    }\n\n    CollectionsSet.Set = CollectionsSet; // hack so require(\"set\").Set will work in MontageJS\n    CollectionsSet.CollectionsSet = CollectionsSet;\n\n    Object.addEach(CollectionsSet.prototype, GenericCollection.prototype);\n    Object.addEach(CollectionsSet.prototype, GenericSet.prototype);\n\n    CollectionsSet.from = GenericCollection.from;\n\n    Object.defineProperty(CollectionsSet.prototype,\"size\",GenericCollection._sizePropertyDescriptor);\n\n    //Overrides for consistency:\n    // Set.prototype.forEach = GenericCollection.prototype.forEach;\n\n\n    CollectionsSet.prototype.Order = List;\n    CollectionsSet.prototype.Store = FastSet;\n\n    CollectionsSet.prototype.constructClone = function (values) {\n        return new this.constructor(values, this.contentEquals, this.contentHash, this.getDefault);\n    };\n\n    CollectionsSet.prototype.has = function (value) {\n        var node = new this.order.Node(value);\n        return this.store.has(node);\n    };\n\n    CollectionsSet.prototype.get = function (value, equals) {\n        if (equals) {\n            throw new Error(\"Set#get does not support second argument: equals\");\n        }\n        var node = new this.order.Node(value);\n        node = this.store.get(node);\n        if (node) {\n            return node.value;\n        } else {\n            return this.getDefault(value);\n        }\n    };\n\n    CollectionsSet.prototype.add = function (value) {\n        var node = new this.order.Node(value);\n        if (!this.store.has(node)) {\n            var index = this.length;\n            this.order.add(value);\n            node = this.order.head.prev;\n            this.store.add(node);\n            this.length++;\n            return true;\n        }\n        return false;\n    };\n\n    CollectionsSet.prototype[\"delete\"] = function (value, equals) {\n        if (equals) {\n            throw new Error(\"Set#delete does not support second argument: equals\");\n        }\n        var node = new this.order.Node(value);\n        if (this.store.has(node)) {\n            node = this.store.get(node);\n            this.store[\"delete\"](node); // removes from the set\n            this.order.splice(node, 1); // removes the node from the list\n            this.length--;\n            return true;\n        }\n        return false;\n    };\n\n    CollectionsSet.prototype.pop = function () {\n        if (this.length) {\n            var result = this.order.head.prev.value;\n            this[\"delete\"](result);\n            return result;\n        }\n    };\n\n    CollectionsSet.prototype.shift = function () {\n        if (this.length) {\n            var result = this.order.head.next.value;\n            this[\"delete\"](result);\n            return result;\n        }\n    };\n\n    CollectionsSet.prototype.one = function () {\n        if (this.length > 0) {\n            return this.store.one().value;\n        }\n    };\n\n    CollectionsSet.prototype.clear = function () {\n        this.store.clear();\n        this.order.clear();\n        this.length = 0;\n    };\n    Object.defineProperty(CollectionsSet.prototype,\"_clear\", {\n        value: CollectionsSet.prototype.clear\n    });\n\n    CollectionsSet.prototype.reduce = function (callback, basis /*, thisp*/) {\n        var thisp = arguments[2];\n        var list = this.order;\n        var index = 0;\n        return list.reduce(function (basis, value) {\n            return callback.call(thisp, basis, value, index++, this);\n        }, basis, this);\n    };\n\n    CollectionsSet.prototype.reduceRight = function (callback, basis /*, thisp*/) {\n        var thisp = arguments[2];\n        var list = this.order;\n        var index = this.length - 1;\n        return list.reduceRight(function (basis, value) {\n            return callback.call(thisp, basis, value, index--, this);\n        }, basis, this);\n    };\n\n    CollectionsSet.prototype.iterate = function () {\n        return this.order.iterate();\n    };\n\n    CollectionsSet.prototype.values = function () {\n        return new Iterator(this.valuesArray(), true);\n    };\n\n    CollectionsSet.prototype.log = function () {\n        var set = this.store;\n        return set.log.apply(set, arguments);\n    };\n\n\n\nif(!GlobalSet) {\n    module.exports = CollectionsSet;\n}\nelse {\n    GlobalSet.prototype.valuesArray = GenericSet.prototype.valuesArray;\n    GlobalSet.prototype.entriesArray = GenericSet.prototype.entriesArray;\n    module.exports = GlobalSet;\n    GlobalSet.CollectionsSet = CollectionsSet;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}